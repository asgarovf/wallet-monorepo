import { ethers } from "hardhat";

async function main() {
  const Webauthn = await ethers.getContractFactory("Webauthn");
  const webauthn = await Webauthn.deploy();

  await webauthn.deployed();

  const challenge = "0x94";

  const signature =
    "0x000000000000000000000000000000000000000000000000000000000000012001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000245a47fd064f4e62da2ea35745f7b80b35a66ef7b505582a6c0666206717113ac98bdb3fb1629e22cf568145aeabeee93a7e84249608ec274bf39b25b7d37ff1fa66f3b74e0d45be3ebbf651d523d67dcd77a88aca88862cf73ed2dd70128538fb516dbf708a6aed859a565840c38772f75eb59993fad462e2f16efaac7e07c60a000000000000000000000000000000000000000000000000000000000000002549960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d9763050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000877b2274797065223a22776562617574686e2e676574222c226368616c6c656e6765223a226d366f6d4845544e77446c73574543504138696f3749363162596d4b576e636757796943686d7542546f4141222c226f726967696e223a22687474703a2f2f6c6f63616c686f73743a33303030222c2263726f73734f726967696e223a66616c73657d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c6d366f6d4845544e77446c73574543504138696f3749363162596d4b576e636757796943686d7542546f41410000000000000000000000000000000000000000";

  const res = await webauthn.isValidSignature(challenge, signature);
  const txn = await res.wait();

  console.log(res);
  console.log(txn);
}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
